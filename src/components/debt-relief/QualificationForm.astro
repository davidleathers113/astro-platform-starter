---
// src/components/debt-relief/QualificationForm.astro
---

<div id="qualification-form" class="p-6 sm:p-8 form-container rounded-lg bg-background-form text-text shadow-lg border-2 border-border hover:shadow-xl transition-all">
    <h3 class="mb-6 text-xl font-bold">Quick Debt Relief Check</h3>
    
    <form id="qualification-form-element" class="space-y-6">
        <div class="form-control animate-fade-in-delay-1">
            <label for="debt-amount" class="form-label block mb-2 font-medium">How much debt do you have?*</label>
            <select id="debt-amount" name="debtAmount" class="w-full p-3 border border-border rounded-md bg-input-bg shadow-inner focus:ring-2 focus:ring-primary focus:border-primary transition-all" required>
                <option value="">Select Amount</option>
                <option value="10000-15000">$10,000 - $15,000</option>
                <option value="15000-25000">$15,000 - $25,000</option>
                <option value="25000-50000">$25,000 - $50,000</option>
                <option value="50000+">$50,000+</option>
            </select>
            <div id="debt-amount-error" class="error-message hidden mt-1"></div>
        </div>
        
        <div class="form-control animate-fade-in-delay-2">
            <label for="debt-type" class="form-label block mb-2 font-medium">What type of debt do you have?*</label>
            <select id="debt-type" name="debtType" class="w-full p-3 border border-border rounded-md bg-input-bg shadow-inner focus:ring-2 focus:ring-primary focus:border-primary transition-all" required>
                <option value="">Select Type</option>
                <option value="credit-cards">Credit Cards</option>
                <option value="personal-loans">Personal Loans</option>
                <option value="medical">Medical Debt</option>
                <option value="mixed">Mixed Unsecured Debt</option>
            </select>
            <div id="debt-type-error" class="error-message hidden mt-1"></div>
        </div>
        
        <div class="form-control animate-fade-in-delay-3">
            <label for="phone" class="form-label block mb-2 font-medium">Phone Number*</label>
            <input 
                type="tel" 
                id="phone" 
                name="phone" 
                class="w-full p-3 border border-border rounded-md bg-input-bg shadow-inner focus:ring-2 focus:ring-primary focus:border-primary transition-all" 
                placeholder="(___) ___-____" 
                pattern="^\(\d{3}\) \d{3}-\d{4}$" 
                required
                aria-describedby="phone-format"
            />
            <small id="phone-format" class="text-text-muted">Format: (XXX) XXX-XXXX</small>
            <div id="phone-error" class="error-message hidden mt-1"></div>
        </div>
        
        <button 
            type="submit" 
            class="w-full p-4 text-center font-bold btn btn-lg shadow-md hover:shadow-lg transform hover:-translate-y-1 transition-all animate-pulse-once"
            aria-label="Submit form to check your savings options"
        >
            Check Your Savings Options
        </button>
    </form>
    
    <p class="mt-6 text-xs text-text-muted leading-relaxed">
        By submitting, you authorize DebtFreedom to contact you at the number provided using automated technology. 
        Your information is kept secure and confidential.
    </p>
</div>

<style>
    /* Enhanced focus states for better accessibility */
    select:focus, input:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(45, 121, 132, 0.3); /* Updated to match new primary color */
    }
    
    /* Dark mode focus states */
    .dark select:focus, .dark input:focus {
        box-shadow: 0 0 0 3px rgba(88, 203, 224, 0.4); /* Brighter in dark mode */
    }
    
    /* Error states with high contrast */
    .error-message {
        color: var(--color-error);
        font-size: 0.875rem;
        font-weight: 500;
    }
    
    .input-error {
        border-color: var(--color-error) !important;
    }
    
    /* Make sure placeholders have enough contrast */
    input::placeholder {
        color: var(--color-placeholder);
        opacity: 1;
    }
    
    /* Improve form field appearance on mobile */
    @media (max-width: 640px) {
        select, input {
            font-size: 16px; /* Prevents iOS zoom on focus */
        }
    }
</style>

<script>
// Client-side validation and form handling
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('qualification-form-element');
    const phoneInput = document.getElementById('phone');
    const debtAmountSelect = document.getElementById('debt-amount');
    const debtTypeSelect = document.getElementById('debt-type');
    
    const debtAmountError = document.getElementById('debt-amount-error');
    const debtTypeError = document.getElementById('debt-type-error');
    const phoneError = document.getElementById('phone-error');
    
    // Function to show error
    const showError = (element, errorElement, message) => {
        element.classList.add('input-error');
        errorElement.textContent = message;
        errorElement.classList.remove('hidden');
    };
    
    // Function to clear error
    const clearError = (element, errorElement) => {
        element.classList.remove('input-error');
        errorElement.textContent = '';
        errorElement.classList.add('hidden');
    };
    
    // Basic phone formatting
    phoneInput.addEventListener('input', (e) => {
        let value = e.target.value.replace(/\D/g, '');
        if (value.length > 0) {
            if (value.length <= 3) {
                value = `(${value}`;
            } else if (value.length <= 6) {
                value = `(${value.slice(0, 3)}) ${value.slice(3)}`;
            } else {
                value = `(${value.slice(0, 3)}) ${value.slice(3, 6)}-${value.slice(6, 10)}`;
            }
        }
        e.target.value = value;
        
        // Clear error when user types
        clearError(phoneInput, phoneError);
    });
    
    // Clear errors when user selects an option
    debtAmountSelect.addEventListener('change', () => clearError(debtAmountSelect, debtAmountError));
    debtTypeSelect.addEventListener('change', () => clearError(debtTypeSelect, debtTypeError));
    
    // Form submission
    form.addEventListener('submit', (e) => {
        e.preventDefault();
        let isValid = true;
        
        // Validate debt amount
        if (!debtAmountSelect.value) {
            showError(debtAmountSelect, debtAmountError, 'Please select your debt amount');
            isValid = false;
        }
        
        // Validate debt type
        if (!debtTypeSelect.value) {
            showError(debtTypeSelect, debtTypeError, 'Please select your debt type');
            isValid = false;
        }
        
        // Validate phone
        if (!phoneInput.value.match(/^\(\d{3}\) \d{3}-\d{4}$/)) {
            showError(phoneInput, phoneError, 'Please enter a valid phone number');
            isValid = false;
        }
        
        if (!isValid) {
            return;
        }
        
        // Form submission would go here
        // This is a placeholder for actual submission logic
        alert('Thank you for your submission! A debt relief specialist will contact you shortly.');
        form.reset();
        
        // Clear all errors
        clearError(debtAmountSelect, debtAmountError);
        clearError(debtTypeSelect, debtTypeError);
        clearError(phoneInput, phoneError);
    });
});
</script>
